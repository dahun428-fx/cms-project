SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS BOARD_FILE;
DROP TABLE IF EXISTS PROJECT_FILE;
DROP TABLE IF EXISTS attachment;
DROP TABLE IF EXISTS Board;
DROP TABLE IF EXISTS BOARD_TYPE;
DROP TABLE IF EXISTS CAREER;
DROP TABLE IF EXISTS EDUCATION;
DROP TABLE IF EXISTS EMP_MODIFY;
DROP TABLE IF EXISTS EMP_SKILL;
DROP TABLE IF EXISTS LICENSE;
DROP TABLE IF EXISTS LOGIN_HISTORY;
DROP TABLE IF EXISTS MILITARY;
DROP TABLE IF EXISTS SCHOOL;
DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS DEPARTMENT;
DROP TABLE IF EXISTS PROJECT;
DROP TABLE IF EXISTS DEVELOPMENT_EVR;
DROP TABLE IF EXISTS DGREE;
DROP TABLE IF EXISTS DISCHARGE;
DROP TABLE IF EXISTS EDUCATION_STATUS;
DROP TABLE IF EXISTS GRADUATE_STATUS;
DROP TABLE IF EXISTS KEYWORD;
DROP TABLE IF EXISTS LICENSE_LIST;
DROP TABLE IF EXISTS MILITARY_GROUP;
DROP TABLE IF EXISTS MILITARY_RANK;
DROP TABLE IF EXISTS MILITARY_SERVICE;
DROP TABLE IF EXISTS SKILL;
DROP TABLE IF EXISTS SKILL_TYPE;
DROP TABLE IF EXISTS USER_ROLE;




/* Create Tables */

CREATE TABLE attachment
(
	FILE_NO int(11) NOT NULL AUTO_INCREMENT,
	ORIGIN_NAME varchar(45) NOT NULL,
	CHANGE_NAME varchar(45),
	FILE_PATH varchar(100) NOT NULL,
	FILE_STATUS varchar(45),
	UPLOAD_DATE datetime DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (FILE_NO)
);


CREATE TABLE Board
(
	BOARD_NO int(11) NOT NULL AUTO_INCREMENT,
	BOARD_TITLE varchar(45) NOT NULL,
	BOARD_CONTENT varchar(2000),
	BOARD_ENROLL_DATE datetime,
	BOARD_MODIFY_DATE datetime,
	BOARD_STATUS varchar(45),
	BOARD_TYPE_CODE int(11) NOT NULL,
	PRIMARY KEY (BOARD_NO)
);


CREATE TABLE BOARD_FILE
(
	BOARD_NO int(11) NOT NULL,
	FILE_NO int(11) NOT NULL,
	EMP_NO int(11) NOT NULL
);


CREATE TABLE BOARD_TYPE
(
	BOARD_TYPE_CODE int(11) NOT NULL,
	BOARD_TYPE_NAME varchar(45),
	PRIMARY KEY (BOARD_TYPE_CODE)
);


CREATE TABLE CAREER
(
	CAREER_NO int(11) NOT NULL AUTO_INCREMENT,
	COMPANY_NAME varchar(45) NOT NULL,
	POSITION varchar(45) NOT NULL,
	HIRE_DATE date NOT NULL,
	RESIGNATION_DATE date,
	CAREER_STATUS varchar(45),
	EMP_NO int(11) NOT NULL,
	PRIMARY KEY (CAREER_NO)
);


-- 부서 정보를 탐고 있는 테이블
CREATE TABLE DEPARTMENT
(
	DEPT_CODE int(11) NOT NULL AUTO_INCREMENT,
	DEPT_NAME varchar(45),
	PRIMARY KEY (DEPT_CODE),
	UNIQUE (DEPT_NAME)
) COMMENT = '부서 정보를 탐고 있는 테이블';


CREATE TABLE DEVELOPMENT_EVR
(
	DEVELOPMENT_ID int(11) NOT NULL AUTO_INCREMENT,
	OS varchar(45) NOT NULL,
	LANGUAGE varchar(45) NOT NULL,
	TOOL varchar(45) NOT NULL,
	DB varchar(45) NOT NULL,
	WAS varchar(45) NOT NULL,
	ETC varchar(45) NOT NULL,
	PRIMARY KEY (DEVELOPMENT_ID)
);


CREATE TABLE DGREE
(
	DGREE_CODE int(11) NOT NULL AUTO_INCREMENT,
	DGREE_NAME varchar(45) NOT NULL,
	PRIMARY KEY (DGREE_CODE)
);


CREATE TABLE DISCHARGE
(
	DISCHARGE_CODE int(11) NOT NULL AUTO_INCREMENT,
	DISCHARGE_NAME varchar(45) NOT NULL,
	PRIMARY KEY (DISCHARGE_CODE),
	UNIQUE (DISCHARGE_NAME)
);


CREATE TABLE EDUCATION
(
	EDU_NO int(11) NOT NULL AUTO_INCREMENT,
	EDU_NAME varchar(45) NOT NULL,
	EDU_INSTITUTE_NAME varbinary(45) NOT NULL,
	EDU_START_DATE date DEFAULT CURRENT_TIMESTAMP NOT NULL,
	EDU_END_DATE date DEFAULT CURRENT_TIMESTAMP,
	EDU_STATUS varchar(45),
	EDU_STATUS_CODE int(11) NOT NULL,
	EMP_NO int(11) NOT NULL,
	PRIMARY KEY (EDU_NO)
);


CREATE TABLE EDUCATION_STATUS
(
	EDU_STATUS_CODE int(11) NOT NULL AUTO_INCREMENT,
	EDU_STATUS_NAME varchar(45) NOT NULL,
	PRIMARY KEY (EDU_STATUS_CODE)
);


CREATE TABLE employee
(
	EMP_NO int(11) NOT NULL AUTO_INCREMENT,
	-- 회원가입시 입력받는 유저 아이디
	EMP_ID varchar(100) NOT NULL COMMENT '회원가입시 입력받는 유저 아이디',
	EMP_PWD varchar(100) NOT NULL,
	EMP_NAME varchar(45) NOT NULL,
	BIRTH date NOT NULL,
	GENDER varchar(45) NOT NULL,
	PHONE varchar(45),
	EMAIL varchar(45),
	ADDRESS varchar(45),
	JOIN_DATE datetime DEFAULT CURRENT_TIMESTAMP,
	WITHDRAW_DATE datetime,
	EMP_STATUS varchar(45),
	DEPT_CODE int(11) NOT NULL,
	PRIMARY KEY (EMP_NO),
	UNIQUE (EMP_ID)
);


CREATE TABLE EMP_MODIFY
(
	EMP_MODIFY_NO int(11) NOT NULL AUTO_INCREMENT,
	EMP_MODIFY_DATE datetime DEFAULT CURRENT_TIMESTAMP,
	EMP_NO int(11) NOT NULL,
	PRIMARY KEY (EMP_MODIFY_NO)
);


CREATE TABLE EMP_SKILL
(
	EMP_SKILL_NO int(11) NOT NULL AUTO_INCREMENT,
	ETC varchar(45),
	EMP_SKILL_STATUS varchar(45),
	KEYWORD_CODE int(11) NOT NULL,
	SKILL_CODE int(11) NOT NULL,
	EMP_NO int(11) NOT NULL,
	PRIMARY KEY (EMP_SKILL_NO)
);


CREATE TABLE GRADUATE_STATUS
(
	GRADUATE_STATUS_CODE int(11) NOT NULL AUTO_INCREMENT,
	GRADUATE_STATUS_NAME varchar(45) NOT NULL,
	PRIMARY KEY (GRADUATE_STATUS_CODE)
);


CREATE TABLE KEYWORD
(
	KEYWORD_CODE int(11) NOT NULL AUTO_INCREMENT,
	KEYWORD_NAME varchar(45) NOT NULL,
	PRIMARY KEY (KEYWORD_CODE),
	UNIQUE (KEYWORD_NAME)
);


CREATE TABLE LICENSE
(
	LICENSE_NO int(11) NOT NULL AUTO_INCREMENT,
	ACQUISITION_DATE date DEFAULT CURRENT_TIMESTAMP NOT NULL,
	LICENSE_STATUS varchar(45),
	LICENSE_LIST_CODE int(11) NOT NULL,
	EMP_NO int(11) NOT NULL,
	PRIMARY KEY (LICENSE_NO)
);


CREATE TABLE LICENSE_LIST
(
	LICENSE_LIST_CODE int(11) NOT NULL AUTO_INCREMENT,
	LICENSE_LIST_NAME varchar(45) NOT NULL,
	PRIMARY KEY (LICENSE_LIST_CODE),
	UNIQUE (LICENSE_LIST_NAME)
);


CREATE TABLE LOGIN_HISTORY
(
	LOGIN_HISTORY_NO int(11) NOT NULL AUTO_INCREMENT,
	LOGIN_DATE datetime DEFAULT CURRENT_TIMESTAMP NOT NULL,
	LOGIN_IP varchar(45) NOT NULL,
	EMP_NO int(11) NOT NULL,
	PRIMARY KEY (LOGIN_HISTORY_NO)
);


CREATE TABLE MILITARY
(
	MILITARY_NO int(11) NOT NULL AUTO_INCREMENT,
	ENROLL_DATE date NOT NULL,
	DISCHARGE_DATE date NOT NULL,
	MILITARY_SERVICE_CODE int(11) NOT NULL,
	MILITARY_GROUP_CODE int(11) NOT NULL,
	DISCHARGE_CODE int(11) NOT NULL,
	EMP_NO int(11) NOT NULL,
	MILITARY_RANK_CODE int(11) NOT NULL,
	PRIMARY KEY (MILITARY_NO)
);


CREATE TABLE MILITARY_GROUP
(
	MILITARY_GROUP_CODE int(11) NOT NULL AUTO_INCREMENT,
	MILITARY_GROUP_NAME varchar(45) NOT NULL,
	PRIMARY KEY (MILITARY_GROUP_CODE),
	UNIQUE (MILITARY_GROUP_NAME)
);


CREATE TABLE MILITARY_RANK
(
	MILITARY_RANK_CODE int(11) NOT NULL AUTO_INCREMENT,
	MILITARY_RANK_NAME varchar(45) NOT NULL,
	PRIMARY KEY (MILITARY_RANK_CODE),
	UNIQUE (MILITARY_RANK_NAME)
);


CREATE TABLE MILITARY_SERVICE
(
	MILITARY_SERVICE_CODE int(11) NOT NULL AUTO_INCREMENT,
	MILITARY_SERVICE_NAME varchar(45) NOT NULL,
	PRIMARY KEY (MILITARY_SERVICE_CODE),
	UNIQUE (MILITARY_SERVICE_NAME)
);


CREATE TABLE PROJECT
(
	PROJECT_NO int(11) NOT NULL AUTO_INCREMENT,
	PROJECT_NAME varchar(45) NOT NULL,
	START_DATE date NOT NULL,
	END_DATE date NOT NULL,
	CLIENT varchar(45) NOT NULL,
	WORKPLACE varchar(45) NOT NULL,
	PART varchar(45) NOT NULL,
	PROJECT_STATUS varchar(45),
	DEVELOPMENT_ID int(11) NOT NULL,
	PRIMARY KEY (PROJECT_NO)
);


CREATE TABLE PROJECT_FILE
(
	FILE_NO int(11) NOT NULL,
	PROJECT_NO int(11) NOT NULL,
	EMP_NO int(11) NOT NULL
);


CREATE TABLE SCHOOL
(
	SCHOOL_NO int(11) NOT NULL AUTO_INCREMENT,
	SCHOOL_NAME varchar(45) NOT NULL,
	MAJOR varchar(45) NOT NULL,
	ADMISSION_DATE date NOT NULL,
	GRADUATE_DATE date NOT NULL,
	SCHOOL_STATUS varchar(45),
	GRADUATE_STATUS_CODE int(11) NOT NULL,
	DGREE_CODE int(11) NOT NULL,
	EMP_NO int(11) NOT NULL,
	PRIMARY KEY (SCHOOL_NO)
);


CREATE TABLE SKILL
(
	SKILL_CODE int(11) NOT NULL AUTO_INCREMENT,
	SKILL_NAME varchar(45) NOT NULL,
	SKILL_TYPE_CODE int(11) NOT NULL,
	PRIMARY KEY (SKILL_CODE),
	UNIQUE (SKILL_NAME)
);


CREATE TABLE SKILL_TYPE
(
	SKILL_TYPE_CODE int(11) NOT NULL AUTO_INCREMENT,
	SKILL_TYPE_NAME varchar(45) NOT NULL,
	PRIMARY KEY (SKILL_TYPE_CODE),
	UNIQUE (SKILL_TYPE_NAME)
);


-- 사이트 내 권한 정보를 담고 있는 테이블
CREATE TABLE USER_ROLE
(
	-- 회원가입시 입력받는 유저 아이디
	ID varchar(100) NOT NULL COMMENT '회원가입시 입력받는 유저 아이디',
	-- 유저 권한을 설정한다.
	ROLE_NAME varchar(10) DEFAULT 'ROLE_GUEST' NOT NULL COMMENT '유저 권한을 설정한다.',
	PRIMARY KEY (ID)
) COMMENT = '사이트 내 권한 정보를 담고 있는 테이블';



/* Create Foreign Keys */

ALTER TABLE BOARD_FILE
	ADD FOREIGN KEY (FILE_NO)
	REFERENCES attachment (FILE_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PROJECT_FILE
	ADD FOREIGN KEY (FILE_NO)
	REFERENCES attachment (FILE_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE BOARD_FILE
	ADD FOREIGN KEY (BOARD_NO)
	REFERENCES Board (BOARD_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE Board
	ADD FOREIGN KEY (BOARD_TYPE_CODE)
	REFERENCES BOARD_TYPE (BOARD_TYPE_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE employee
	ADD FOREIGN KEY (DEPT_CODE)
	REFERENCES DEPARTMENT (DEPT_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PROJECT
	ADD FOREIGN KEY (DEVELOPMENT_ID)
	REFERENCES DEVELOPMENT_EVR (DEVELOPMENT_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SCHOOL
	ADD FOREIGN KEY (DGREE_CODE)
	REFERENCES DGREE (DGREE_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MILITARY
	ADD FOREIGN KEY (DISCHARGE_CODE)
	REFERENCES DISCHARGE (DISCHARGE_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE EDUCATION
	ADD FOREIGN KEY (EDU_STATUS_CODE)
	REFERENCES EDUCATION_STATUS (EDU_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE BOARD_FILE
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CAREER
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE EDUCATION
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE EMP_MODIFY
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE EMP_SKILL
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LICENSE
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LOGIN_HISTORY
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MILITARY
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PROJECT_FILE
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SCHOOL
	ADD FOREIGN KEY (EMP_NO)
	REFERENCES employee (EMP_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SCHOOL
	ADD FOREIGN KEY (GRADUATE_STATUS_CODE)
	REFERENCES GRADUATE_STATUS (GRADUATE_STATUS_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE EMP_SKILL
	ADD FOREIGN KEY (KEYWORD_CODE)
	REFERENCES KEYWORD (KEYWORD_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE LICENSE
	ADD FOREIGN KEY (LICENSE_LIST_CODE)
	REFERENCES LICENSE_LIST (LICENSE_LIST_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MILITARY
	ADD FOREIGN KEY (MILITARY_GROUP_CODE)
	REFERENCES MILITARY_GROUP (MILITARY_GROUP_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MILITARY
	ADD FOREIGN KEY (MILITARY_RANK_CODE)
	REFERENCES MILITARY_RANK (MILITARY_RANK_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE MILITARY
	ADD FOREIGN KEY (MILITARY_SERVICE_CODE)
	REFERENCES MILITARY_SERVICE (MILITARY_SERVICE_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PROJECT_FILE
	ADD FOREIGN KEY (PROJECT_NO)
	REFERENCES PROJECT (PROJECT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE EMP_SKILL
	ADD FOREIGN KEY (SKILL_CODE)
	REFERENCES SKILL (SKILL_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SKILL
	ADD FOREIGN KEY (SKILL_TYPE_CODE)
	REFERENCES SKILL_TYPE (SKILL_TYPE_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE employee
	ADD FOREIGN KEY (EMP_ID)
	REFERENCES USER_ROLE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



